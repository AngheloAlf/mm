#ifndef VARIABLES_H
#define VARIABLES_H

#include "z64.h"
#include "segment_symbols.h"
#include "macros.h"

// pre-boot variables
extern u32 osTvType;
extern u32 osRomType;
extern uintptr_t osRomBase;
extern u32 osResetType;
extern u32 osCicId;
extern u32 osVersion;
extern size_t osMemSize;
extern s32 osAppNmiBuffer[0x10];
extern u16 gFramebuffer1[SCREEN_HEIGHT][SCREEN_WIDTH]; // at 0x80000500
extern u8 D_80025D00[];

// data
extern u64 rspbootTextStart[];
extern u8 D_80096B20;
extern vu8 gViConfigUseDefault;
extern u8 gViConfigAdditionalScanLines;
extern u32 gViConfigFeatures;
extern f32 gViConfigXScale;
extern f32 gViConfigYScale;
extern OSPiHandle* gCartHandle;
extern u32 sDmaMgrDmaBuffSize;
extern vs32 gIrqMgrResetStatus;
extern volatile OSTime sIrqMgrResetTime;
extern volatile OSTime sIrqMgrRetraceTime;
extern s32 sIrqMgrRetraceCount;
extern const char* sCpuExceptions[18];
extern const char* sFpuExceptions[6];
extern FaultDrawer* sFaultDrawContext;
extern FaultDrawer sFaultDrawerDefault;
extern s32 gLoadLogSeverity;
extern s32 gLoad2LogSeverity;

// extern UNK_TYPE1 sGfxPrintFontTLUT;
// extern UNK_TYPE1 sGfxPrintRainbowTLUT;
// extern UNK_TYPE1 sGfxPrintRainbowData;
// extern UNK_TYPE1 sGfxPrintFontData;
// extern UNK_TYPE4 D_80097524;
// extern u32 sRandInt;
extern OSViMode osViModeNtscHpf1;
extern OSViMode osViModePalLan1;
extern s16 sintable[0x400];
extern __osHwInt __osHwIntTable[];
// extern UNK_TYPE1 D_80097DE4;
// extern UNK_TYPE4 D_80097E08;
extern OSThread* __osThreadTail;
extern OSThread* __osRunQueue;
extern OSThread* __osActiveQueue;
extern OSThread* __osRunningThread;
extern OSThread* __osFaultedThread;
extern u32 __osSiAccessQueueEnabled;
extern UNK_TYPE4 D_80097E40;
extern u64 osClockRate;
extern s32 osViClock;
extern UNK_TYPE4 __osShutdown;
extern UNK_TYPE4 __OSGlobalIntMask;
extern OSDevMgr __osPiDevMgr;
extern OSPiHandle* __osPiTable;
extern OSPiHandle* __osCurrentHandle[];
extern UNK_TYPE4 __osPiAccessQueueEnabled;
extern OSViMode osViModeNtscHpn1;
extern s32 __osPfsInodeCacheChannel;
extern u8 __osPfsInodeCacheBank;
extern UNK_TYPE4 D_80097F10;
extern char spaces[];
extern char zeroes[];
extern OSTimer* __osTimerList;
// extern UNK_TYPE4 D_80097F80;
extern float D_80097F90;
// extern UNK_TYPE1 D_80097FA0;
// extern UNK_TYPE1 D_80097FA4;
// extern UNK_TYPE1 D_80097FA5;
extern s32 __osPfsLastChannel;
extern OSViMode osViModeNtscLan1;
extern OSViMode osViModeMpalLan1;
// extern __OSViContext D_80098060[2];
extern __OSViContext* __osViCurr;
extern __OSViContext* __osViNext;
// extern UNK_TYPE4 sCartRomNeedsInit;
extern OSViMode osViModeFpalLan1;
// extern u8 ldigs[];
// extern u8 udigs[];
// extern OSDevMgr __osViDevMgr;
extern u32 __additional_scanline;
// extern UNK_TYPE1 D_80098180;
extern char bootThreadName[];
extern char idleThreadName[];
extern char irqmgrThreadName[];
extern char mainThreadName[];
extern f32 D_800981B0;
extern char D_800981C0[];
extern const char dmamgrString800981C4[];
extern const char dmamgrString800981D4[];
extern const char dmamgrString800981E4[];
extern const char dmamgrString800981F4[];
extern const char dmamgrThreadName[];
extern char D_80098210[];
extern char yaz0String80098220[];
extern char yaz0String8009823C[];
extern char D_80098280[];
extern char D_80098290[];
extern char D_800982A4[];
extern char D_800982B0[];
extern char D_800982BC[];
extern char D_800982D0[];
extern char D_800982E8[];
extern char D_80098300[];
extern char D_80098318[];
extern char D_80098330[];
extern char D_80098344[];
extern char D_80098358[];
extern char D_80098370[];
extern char D_80098388[];
extern char D_800983A0[];
extern char D_800983B8[];
extern char D_800983CC[];
extern char D_800983DC[];
extern char D_800983F8[];
extern char D_80098414[];
extern char D_8009842C[];
extern char D_80098448[];
extern char D_80098460[];
extern char D_80098474[];
extern char D_80098488[];
extern char D_80098494[];
extern char D_800984A0[];
extern char D_800984B4[55];
extern char D_800984EC[54];
extern char D_80098524[71];
extern char D_8009856C[74];
extern char D_800985B8[];
extern char D_800985C8[];
extern char D_800985DC[];
extern char D_800985EC[];
extern char D_80098600[];
extern char D_80098610[];
extern char D_80098618[];
extern char D_8009861C[];
extern char D_8009862C[];
extern char D_80098634[];
extern char D_80098648[];
extern char D_80098664[];
extern char D_80098680[];
extern char D_8009869C[];
extern char D_800986B8[];
extern char D_800986D4[];
extern char D_800986F0[];
extern char D_8009870C[];
extern char D_80098728[];
extern char D_80098744[];
extern char D_80098760[];
extern char D_80098780[];
extern char D_80098784[];
extern char D_80098788[];
extern char D_8009878C[];
extern char D_80098790[];
extern char D_80098794[];
extern char D_80098798[];
extern char D_8009879C[];
extern char D_800987A0[];
extern char D_800987A4[];
extern char D_800987B0[];
extern char D_800987B4[];
extern char D_800987CC[];
extern char D_800987EC[];
extern char D_8009880C[];
extern char D_8009882C[];
extern char D_8009884C[];
extern char D_8009886C[];
extern char D_8009888C[];
extern char D_800988AC[];
extern char D_800988CC[];
extern char D_800988EC[];
extern char D_8009890C[];
extern char D_8009892C[];
extern char D_80098930[];
extern char D_80098934[];
extern char D_80098938[];
extern char D_8009893C[];
extern char D_80098940[];
extern char D_80098944[];
extern char D_80098948[];
extern char D_8009894C[];
extern char D_80098950[];
extern char D_80098954[];
extern char D_8009895C[];
extern char D_80098968[];
extern char D_80098970[];
extern char D_80098978[];
extern char D_80098980[];
extern char D_8009898C[];
extern char D_800989A4[];
extern char D_800989B0[];
extern char D_800989BC[];
extern char D_800989CC[];
extern char D_800989D8[];
extern char D_800989F4[];
extern char D_80098A00[];
extern char D_80098A0C[];
extern char D_80098A1C[];
extern char D_80098A20[34];
extern const char D_80098A44[];
extern const char D_80098A68[];
extern char D_80098A88[53];
extern char D_80098AC0[49];
extern char D_80098AF4[51];
extern char D_80098B28[];
extern char D_80098B4C[];
extern char D_80098B68[];
extern char D_80098B84[];
extern char D_80098BA0[];
extern char D_80098BBC[];
extern const char faultThreadName[];
extern char D_80098BE0[];
extern char D_80098BF8[];
extern char D_80098BFC[];
extern char D_80098C04[];
extern char D_80098C08[];
extern char D_80098C10[];
extern char D_80098C28[];
extern char D_80098C2C[];
extern char D_80098C34[];
extern char D_80098C38[];
extern char D_80098C40[];
extern char D_80099050[];
extern char D_80099054[];
extern char D_8009905C[];
extern char D_80099064[];
extern char D_80099070[];
extern const char D_80099078[];
extern const char D_8009907C[];
extern const char D_80099080[];
extern char D_800990B0[];
extern f32 D_800990C0[9];
extern f32 D_800990E4;
extern f32 D_800990E8;
extern f32 D_800990EC;
extern f32 D_800990F0;
extern f32 D_800990F4;
extern f32 D_800990F8;
extern f32 D_800990FC;
extern f32 D_80099100;
extern f32 D_80099104;
extern f32 D_80099108;
extern f32 D_8009910C;
extern u16 D_800991A0[64];
extern du P[5];
extern du rpi;
extern du pihi;
extern du pilo;
extern fu zero;
// extern UNK_TYPE1 D_80099270;
extern UNK_PTR __osIntTable;
extern f64 D_800992C0;
extern f64 D_800992F0;
extern f64 D_800992F8;
extern char D_80099300[];
extern char D_80099304[];
extern unsigned int D_8009930C[6];
extern f32 D_80099400;
extern f64 D_80099428;
extern f64 D_80099430;
extern f64 D_80099438;
// extern UNK_TYPE4 D_80099440;
extern f32 __libm_qnan_f;
extern f64 D_80099460[9];
extern char D_800994A8[];
extern char D_800994AC[];
extern char D_800994B0[];
// extern UNK_TYPE1 D_800994B1;
extern f64 D_800994B8;
extern f64 D_800994C0;
extern f64 D_800994C8;
extern char gBuildTeam[];
extern char gBuildDate[];
extern char gBuildMakeOption[];

extern IrqMgr gIrqMgr;

extern OSViMode gViConfigMode;
extern u8 D_8009B290;

extern u8 sYaz0DataBuffer[0x400];
extern u8* sYaz0CurDataEnd;
extern u32 sYaz0CurRomStart;
extern u32 sYaz0CurSize;
extern u8* sYaz0MaxPtr;
extern void* gYaz0DecompressDstEnd;
// extern UNK_TYPE4 D_8009BE30;
// extern UNK_TYPE4 D_8009BE34;
// extern FaultClient romInfoFaultClient;

extern FaultThreadStruct gFaultStruct;

extern FaultDrawer sFaultDrawerStruct;
// extern UNK_TYPE4 D_8009CD10;
extern u32 sRandFloat;
// extern UNK_TYPE4 sArenaLockMsg;
extern OSTask tmp_task;

extern OSMesg siAccessBuf[1];
extern OSMesgQueue __osSiAccessQueue;

extern UNK_TYPE1 D_8009CF60;
// extern UNK_TYPE4 D_8009CF70;
extern OSThread __osThreadSave;
extern OSPiHandle D_8009D130;
extern OSPiHandle D_8009D1A8;

extern OSMesg D_8009E3F0[1];
extern OSMesgQueue __osPiAccessQueue;
extern __OSInode __osPfsInodeCache;
extern __OSEventState __osEventStateTab[16];
extern OSTimer D_8009E590;
extern OSTime __osCurrentTime;
extern u32 __osBaseCounter;
extern u32 __osViIntrCount;
extern u32 __osTimerCounter;
extern OSPifRam __osPfsPifRam;
extern OSPiHandle CartRomHandle;

extern DmaEntry dmadata[1568];
// extern UNK_TYPE1 D_80186028;
extern u64 aspMainTextStart[];

extern u8 sDropTable[DROP_TABLE_SIZE * DROP_TABLE_NUMBER];
extern u8 sDropTableAmounts[DROP_TABLE_SIZE * DROP_TABLE_NUMBER];
extern s32 D_801AE194[32];
extern u8 D_801AE214[32];
// extern UNK_TYPE4 D_801AE240;
// extern UNK_TYPE4 D_801AE250;
extern UNK_PTR D_801AE260[3];
// extern UNK_TYPE4 D_801AE27C;
// extern UNK_TYPE4 D_801AE28C;
// extern UNK_TYPE4 D_801AE29C;
// extern UNK_TYPE4 D_801AE2AC;
// extern UNK_TYPE4 D_801AE2BC;
// extern UNK_TYPE4 D_801AE2CC;
// extern UNK_TYPE4 D_801AE2DC;
// extern EffectSsInfo sEffectSsInfo;
// extern UNK_TYPE1 D_801AE3B0;
// extern UNK_TYPE1 D_801AE3B4;
// extern UNK_TYPE4 D_801AE3B8;
// extern UNK_TYPE4 D_801AE3BC;
// extern UNK_TYPE1 D_801AE3C0;
// extern UNK_TYPE1 D_801AE3C4;
// extern UNK_TYPE1 D_801AE3C8;
// extern UNK_TYPE1 D_801AE3CC;
// extern UNK_TYPE4 D_801AE3D0;
// extern UNK_TYPE4 D_801AE3D4;
// extern UNK_TYPE4 D_801AE3D8;
// extern UNK_TYPE4 D_801AE3DC;
// extern UNK_TYPE4 D_801AE3E0;
// extern UNK_TYPE4 D_801AE3EC;
// extern UNK_TYPE1 D_801AE3F8;
// extern UNK_TYPE4 D_801AE3FC;
// extern UNK_TYPE4 D_801AE404;
// extern UNK_TYPE1 D_801AE47C;
// extern UNK_TYPE1 D_801AE480;
// extern UNK_TYPE1 D_801AE484;
// extern UNK_TYPE1 D_801AE485;
// extern UNK_TYPE1 D_801AE486;
// extern UNK_TYPE1 D_801AE488;
// extern UNK_TYPE1 D_801AE489;
// extern UNK_TYPE1 D_801AE48A;
// extern UNK_TYPE1 D_801AE48C;
// extern UNK_TYPE1 D_801AE490;
extern EffectSsOverlay gParticleOverlayTable[39];
// extern FlagSetEntry sFlagEntries[];
// extern s32 sEntryIndex;
// extern u32 sCurrentBit;
// extern s32 sTimer;

extern ActorOverlay gActorOverlayTable[ACTOR_ID_MAX];
extern ActorId gMaxActorId;
extern BgCheckSceneSubdivisionEntry sSceneSubdivisionList[];
extern BgSpecialSceneMaxObjects sCustomDynapolyMem[];
// extern UNK_TYPE1 D_801B4708;

extern DamageTable sDamageTablePresets[23];
extern f32 damageMultipliers[16];
extern Collider defaultCollider;
extern ColliderTouch defaultColliderTouch;
extern ColliderBump defaultColliderBump;
extern ColliderInfo defaultColliderInfo;
extern ColliderJntSphElementDim defaultColliderJntSphElementDim;
extern Cylinder16 defaultColliderCylinderDim;
extern TriNorm defaultColliderTrisElementDim;
extern ColliderQuadDim defaultColliderQuadDim;
extern Vec3f defaultLinePoint;
extern ColChkResetFunc sATResetFuncs[COLSHAPE_MAX];
extern ColChkResetFunc sACResetFuncs[COLSHAPE_MAX];
extern ColChkResetFunc sOCResetFuncs[COLSHAPE_MAX];
extern ColChkBloodFunc sBloodFuncs[6];
extern HitInfo sHitInfo[14];
extern ColChkApplyFunc sColChkApplyFuncs[COLSHAPE_MAX];
extern ColChkVsFunc sACVsFuncs[COLSHAPE_MAX][COLSHAPE_MAX];
extern ColChkVsFunc sOCVsFuncs[COLSHAPE_MAX][COLSHAPE_MAX];
extern CollisionCheckInfo defaultColChkInfo;
extern ColChkApplyFunc sApplyDamageFuncs[COLSHAPE_MAX];
extern ColChkLineFunc sOCLineCheckFuncs[COLSHAPE_MAX];
extern EffectShieldParticleInit shieldParticleInitMetal;
extern EffectShieldParticleInit shieldParticleInitWood;
// extern UNK_TYPE4 D_801BB090;
// extern UNK_TYPE1 D_801BB094;
// extern UNK_TYPE1 D_801BB0DC;
// extern UNK_TYPE2 D_801BB0FC;
// extern UNK_TYPE1 D_801BB100;

extern u8 gOpeningEntranceIndex;

extern ActorCutscene sGlobalCutsceneList[8];
extern GameStateOverlay gGameStateOverlayTable[];
extern s32 gGraphNumGameStates;
// extern UNK_TYPE2 D_801BDA70;
// extern UNK_TYPE2 D_801BDA74;
// extern UNK_TYPE2 D_801BDA78;
// extern UNK_TYPE2 D_801BDA7C;
extern s32 D_801BDA9C;
extern UNK_TYPE4 D_801BDAA0;
extern s32 D_801BDAA4;
// extern UNK_TYPE2 D_801BDAA8;
// extern UNK_TYPE2 D_801BDAAA;
// extern UNK_TYPE2 D_801BDAAC;
// extern UNK_TYPE2 D_801BDAAE;
// extern UNK_TYPE2 D_801BDAB0;
// extern UNK_TYPE2 D_801BDAB2;
// extern UNK_TYPE2 D_801BDAB4;
// extern UNK_TYPE2 D_801BDAB6;
// extern UNK_TYPE4 D_801BDAC0;
// extern UNK_TYPE4 D_801BDAC4;
// extern UNK_TYPE4 D_801BDAC8;
// extern UNK_TYPE4 D_801BDACC;
// extern UNK_TYPE4 D_801BDAF0;
// extern UNK_TYPE4 D_801BDAF8;

extern u8 kanfontOrdering[92];
// extern UNK_TYPE4 D_801BDB90;
// extern UNK_TYPE4 D_801BDB94;
// extern UNK_TYPE4 D_801BDB98;
// extern UNK_TYPE2 D_801BDB9C;
// extern UNK_TYPE1 D_801BDBA0;
// extern UNK_TYPE1 D_801BDBA4;
// extern UNK_TYPE1 D_801BDBA8;
extern u8 gWeatherMode;
// extern UNK_TYPE1 D_801BDBB4;
// extern UNK_TYPE1 D_801BDBB8;
// extern UNK_TYPE1 D_801BDBBC;
// extern UNK_TYPE1 D_801BDBC0;
// extern UNK_TYPE1 D_801BDBC4;
extern u8 D_801BDBC8;
// extern UNK_TYPE1 D_801BDBCC;
// extern UNK_TYPE1 D_801BDCF4;
// extern UNK_TYPE1 D_801BE38E;
// extern UNK_TYPE1 D_801BE38F;
// extern UNK_TYPE1 D_801BE390;
// extern UNK_TYPE1 D_801BE4D4;
// extern UNK_TYPE1 D_801BE4F4;
// extern UNK_TYPE1 D_801BE534;
// extern UNK_TYPE1 D_801BE6D4;
// extern UNK_TYPE1 D_801BE874;
// extern UNK_TYPE4 D_801BE894;
// extern UNK_TYPE4 D_801BE8BC;
// extern UNK_TYPE4 D_801BE8E4;
// extern UNK_TYPE1 D_801BE90C;
// extern UNK_TYPE1 D_801BE92C;
// extern UNK_TYPE1 D_801BE944;
// extern actor_init_var_func sInitChainHandlers[11];
// extern UNK_TYPE2 sHeartsPrimColors;
// extern UNK_TYPE2 D_801BE992;
// extern UNK_TYPE2 D_801BE994;
// extern UNK_TYPE2 sHeartsEnvColors;
// extern UNK_TYPE2 D_801BE9A6;
// extern UNK_TYPE2 D_801BE9A8;
// extern UNK_TYPE2 sHeartsPrimFactors;
// extern UNK_TYPE2 sHeartsEnvFactors;
// extern UNK_TYPE2 sHeartsDDPrimColors;
// extern UNK_TYPE2 D_801BE9E2;
// extern UNK_TYPE2 D_801BE9E4;
// extern UNK_TYPE2 sHeartsDDEnvColors;
// extern UNK_TYPE2 D_801BE9F6;
// extern UNK_TYPE2 D_801BE9F8;
// extern UNK_TYPE2 sHeartsDDPrimFactors;
// extern UNK_TYPE2 D_801BEA0A;
// extern UNK_TYPE2 D_801BEA0C;
// extern UNK_TYPE2 sHeartsDDEnvFactors;
// extern UNK_TYPE2 D_801BEA1E;
// extern UNK_TYPE2 D_801BEA20;
// extern UNK_TYPE1 HeartTextures;
// extern UNK_TYPE1 HeartDDTextures;
//extern LightsPosBindFunc posBindFuncs[3];
//extern LightsBindFunc dirBindFuncs[3];
// extern UNK_TYPE4 D_801BEAD4;
// extern UNK_TYPE4 D_801BEAD8;
// extern UNK_TYPE1 D_801BEAE0;
// extern UNK_TYPE4 D_801BEAF4;
// extern UNK_TYPE4 D_801BEAF8;
// extern UNK_TYPE4 D_801BEB04;
// extern UNK_TYPE4 D_801BEB08;
// extern UNK_TYPE4 D_801BEB14;
// extern UNK_TYPE4 D_801BEB18;
// extern UNK_TYPE4 D_801BEB24;
// extern UNK_TYPE4 D_801BEB28;
// extern UNK_TYPE1 D_801BEB38;
// extern UNK_TYPE4 D_801BEBB8;
// extern UNK_TYPE4 D_801BEBD8;
// extern UNK_TYPE2 D_801BEBF8;
// extern UNK_TYPE2 D_801BEBFA;
// extern UNK_TYPE2 D_801BEBFC;
// extern UNK_TYPE2 D_801BEC10;
extern UNK_PTR D_801BEC14;
// extern UNK_TYPE4 D_801BEC1C;
// extern UNK_TYPE4 D_801BEC20;
// extern UNK_TYPE1 D_801BEC24;
// extern UNK_TYPE1 D_801BEC2C;
// extern UNK_TYPE2 D_801BEC5C;
// extern UNK_TYPE2 D_801BEC5E;
// extern UNK_TYPE4 D_801BEC70;
// extern UNK_TYPE1 D_801BEC84;
// extern UNK_TYPE1 D_801BECA4;
// extern UNK_TYPE1 D_801BECC4;
// extern UNK_TYPE1 D_801BECE4;
// extern UNK_TYPE1 D_801BED00;
// extern UNK_TYPE2 D_801BED24;
// extern UNK_TYPE1 D_801BED3C;
// extern UNK_TYPE1 D_801BED40;
// extern UNK_TYPE1 D_801BED4C;
// extern UNK_TYPE1 D_801BED54;
// extern UNK_TYPE1 D_801BED55;
// extern UNK_TYPE1 D_801BED56;
// extern UNK_TYPE1 D_801BED88;
// extern UNK_TYPE1 D_801BEFC8;
// extern UNK_TYPE1 D_801BF15C;
// extern UNK_TYPE1 D_801BF170;
// extern UNK_TYPE1 D_801BF176;
// extern UNK_TYPE1 D_801BF177;
// extern UNK_TYPE1 D_801BF178;
// extern UNK_TYPE1 D_801BF3B4;
// extern UNK_TYPE2 D_801BF550;
// extern UNK_TYPE2 D_801BF554;
// extern UNK_TYPE2 D_801BF558;
// extern UNK_TYPE4 D_801BF55C;
// extern UNK_TYPE4 D_801BF580;
// extern UNK_TYPE4 D_801BF594;
// extern UNK_TYPE4 D_801BF5A4;
// extern UNK_TYPE2 D_801BF5B0;
extern UNK_PTR D_801BF5C0;
// extern UNK_TYPE1 D_801BF68C;

extern FlexSkeletonHeader* gPlayerSkeletons[PLAYER_FORM_MAX];
extern PlayerModelIndices gPlayerModelTypes[];
extern struct_80124618 D_801C03A0[];
extern struct_80124618 D_801C0490[];
extern Gfx gCullBackDList[];
extern Gfx gCullFrontDList[];

extern Gfx sSetupDL[438];
extern Gfx sFillSetupDL[12];
extern Gfx gEmptyDL[1];
extern u32 gBitFlags[32];
extern u16 gEquipMasks[];
extern u16 gEquipNegMasks[];
extern u32 gUpgradeMasks[8];
extern u32 gUpgradeNegMasks[];
extern u8 gEquipShifts[];
extern u8 gUpgradeShifts[8];
extern u16 gUpgradeCapacities[][4];
extern u32 gGsFlagsMask[];
extern u32 gGsFlagsShift[];
extern TexturePtr gItemIcons[];
extern u8 gItemSlots[];
extern s16 gItemPrices[];
extern u16 gSceneIdsPerRegion[11][27];
extern u8 gPlayerFormItemRestrictions[PLAYER_FORM_MAX][114];

extern s16 gPlayerFormObjectIndices[PLAYER_FORM_MAX];
extern ObjectId gObjectTableSize;
extern RomFile gObjectTable[OBJECT_ID_MAX];

extern SceneTableEntry gSceneTable[];
extern UNK_PTR D_801C5C50;
// extern UNK_TYPE1 D_801C5C9C;
extern UNK_PTR D_801C5CB0;
// extern UNK_TYPE1 D_801C5DD0;
// extern UNK_TYPE1 D_801C5DE0;
// extern UNK_TYPE1 D_801C5DF0;
// extern UNK_TYPE1 D_801C5E00;

// extern UNK_TYPE1 D_801C6A70;
// extern UNK_TYPE2 D_801C6A74;
// extern UNK_TYPE2 D_801C6A78;
// extern UNK_TYPE2 D_801C6A7C;
// extern UNK_TYPE2 D_801C6A80;
// extern UNK_TYPE2 D_801C6A84;
// extern UNK_TYPE2 D_801C6A88;
// extern UNK_TYPE2 D_801C6A8C;
// extern UNK_TYPE2 D_801C6A90;
// extern UNK_TYPE2 D_801C6A94;
extern u8 D_801C6A98[5][5];
// extern UNK_TYPE1 D_801C6AB8;
// extern UNK_TYPE1 D_801C6B28;
// extern UNK_TYPE1 D_801CED40;
// extern UNK_TYPE2 D_801CFC78;
// extern UNK_TYPE1 D_801CFC7A;
// extern UNK_TYPE1 D_801CFC7C;
// extern UNK_TYPE1 D_801CFC7E;
// extern UNK_TYPE1 D_801CFC84;
// extern UNK_TYPE1 D_801CFC88;
// extern UNK_TYPE1 D_801CFC8C;
// extern UNK_TYPE1 D_801CFC8E;
// extern UNK_TYPE1 D_801CFC92;
extern u8 D_801CFC98;
extern s16 D_801CFCA4[9];
// extern UNK_TYPE2 D_801CFCAC;
extern s16 gOcarinaSongItemMap[];
// extern UNK_TYPE2 D_801CFCD8;
// extern UNK_TYPE2 D_801CFCE4;
// extern UNK_TYPE2 D_801CFCF0;
// extern UNK_TYPE2 D_801CFCF4;
// extern UNK_TYPE2 D_801CFCF8;
// extern UNK_TYPE2 D_801CFCFC;
// extern UNK_TYPE2 D_801CFD00;
// extern UNK_TYPE2 D_801CFD04;
// extern UNK_TYPE2 D_801CFD08;
// extern UNK_TYPE2 D_801CFD0C;
// extern UNK_TYPE2 D_801CFD10;
// extern UNK_TYPE2 D_801CFD1C;
// extern UNK_TYPE2 D_801CFD28;
// extern UNK_TYPE2 D_801CFD2C;
// extern UNK_TYPE2 D_801CFD30;
// extern UNK_TYPE2 D_801CFD34;
// extern UNK_TYPE2 D_801CFD38;
// extern UNK_TYPE2 D_801CFD3C;
// extern UNK_TYPE2 D_801CFD40;
// extern UNK_TYPE2 D_801CFD44;
// extern UNK_TYPE2 D_801CFD48;
// extern UNK_TYPE2 D_801CFD54;
// extern UNK_TYPE2 D_801CFD60;
// extern UNK_TYPE2 D_801CFD64;
// extern UNK_TYPE2 D_801CFD68;
// extern UNK_TYPE2 D_801CFD6C;
// extern UNK_TYPE2 D_801CFD70;
// extern UNK_TYPE2 D_801CFD74;
// extern UNK_TYPE2 D_801CFD78;
// extern UNK_TYPE2 D_801CFD7C;
// extern UNK_TYPE2 D_801CFD80;
// extern UNK_TYPE2 D_801CFD84;
// extern UNK_TYPE2 D_801CFD88;
// extern UNK_TYPE2 D_801CFD8C;
// extern UNK_TYPE2 D_801CFD90;
extern UNK_PTR D_801CFD94;
// extern UNK_TYPE2 D_801CFD98;
// extern UNK_TYPE2 D_801CFD9C;
// extern UNK_TYPE2 D_801CFDA0;
// extern UNK_TYPE1 D_801CFDA4;
// extern UNK_TYPE1 D_801CFDC8;
// extern UNK_TYPE1 D_801CFDEC;
// extern UNK_TYPE1 D_801CFE04;
// extern UNK_TYPE1 D_801CFE1C;
// extern UNK_TYPE1 D_801CFE34;
// extern UNK_TYPE1 D_801CFE4C;
// extern UNK_TYPE1 D_801CFE5C;
// extern UNK_TYPE1 D_801CFE68;
// extern UNK_TYPE1 D_801CFE74;
// extern UNK_TYPE1 D_801CFEA4;
// extern UNK_TYPE1 D_801CFED4;
// extern UNK_TYPE1 D_801CFF04;
// extern UNK_TYPE1 D_801CFF34;
// extern UNK_TYPE1 D_801CFF64;
// extern UNK_TYPE1 D_801CFF70;
// extern UNK_TYPE1 D_801CFF7C;
// extern UNK_TYPE1 D_801CFF88;
// extern UNK_TYPE1 D_801CFF94;
// extern UNK_TYPE1 D_801D0000;
// extern UNK_TYPE1 D_801D0001;
// extern UNK_TYPE1 D_801D001F;
// extern UNK_TYPE1 D_801D0188;
// extern UNK_TYPE1 D_801D023A;
// extern UNK_TYPE1 D_801D0250;
// extern UNK_TYPE2 D_801D0268;
// extern UNK_TYPE1 D_801D027C;
// extern UNK_TYPE1 D_801D0284;
// extern UNK_TYPE1 D_801D028C;
// extern UNK_TYPE1 D_801D02C0;
// extern UNK_TYPE1 D_801D02D8;
// extern UNK_TYPE1 D_801D02F8;
// extern UNK_TYPE1 D_801D0330;
// extern UNK_TYPE1 D_801D0334;
// extern UNK_TYPE1 D_801D0340;
// extern UNK_TYPE1 D_801D034C;
// extern UNK_TYPE1 D_801D0358;
// extern UNK_TYPE1 D_801D0364;
// extern UNK_TYPE1 D_801D0378;
extern char D_801D039C[];
// extern UNK_TYPE1 D_801D03A4;
// extern UNK_TYPE1 D_801D03A8;
// extern UNK_TYPE1 D_801D03C8;
// extern UNK_TYPE1 D_801D03E8;
// extern UNK_TYPE1 D_801D03F0;
// extern UNK_TYPE1 D_801D0401;
// extern UNK_TYPE1 D_801D0408;
// extern UNK_TYPE1 D_801D0428;
// extern UNK_TYPE1 D_801D045A;
// extern UNK_TYPE1 D_801D0462;
//extern UNK_TYPE1 D_801D0468;
// extern UNK_TYPE1 D_801D0470;
// extern char D_801D06F0[];
// extern UNK_TYPE1 D_801D0710;
// extern char D_801D0714[];
// extern UNK_TYPE1 D_801D07C4;
// extern UNK_TYPE1 D_801D07DC;
// extern UNK_TYPE1 D_801D080C;
// extern UNK_TYPE1 D_801D083C;
// extern UNK_TYPE1 D_801D086C;
// extern UNK_TYPE1 D_801D0890;
// extern UNK_TYPE1 D_801D089C;
// extern UNK_TYPE1 D_801D08CC;
// extern UNK_TYPE1 D_801D08D8;
// extern UNK_TYPE1 D_801D08E4;
// extern UNK_TYPE1 D_801D08E8;
// extern UNK_TYPE1 D_801D0900;
extern KaleidoMgrOverlay gKaleidoMgrOverlayTable[2];
// extern UNK_TYPE1 D_801D0B8C;
extern KaleidoMgrOverlay* gKaleidoMgrCurOvl;
// extern UNK_TYPE1 D_801D0C80;
// extern UNK_TYPE1 D_801D0CB0;
extern s32 gDbgCamEnabled;
// extern UNK_TYPE1 D_801D0D54;
// extern UNK_TYPE2 sQuakeIndex;
// extern UNK_TYPE2 sIsCameraUnderwater;
extern Input* D_801D0D60;
// extern UNK_TYPE2 sPlayerCsIdToCsCamId;
// extern UNK_TYPE1 D_801D0D7A;
// extern UNK_TYPE1 D_801D0D80;
// extern UNK_TYPE1 D_801D11F4;
// extern UNK_TYPE1 D_801D1230;
// extern UNK_TYPE1 D_801D1234;
// extern UNK_TYPE4 D_801D1238;
// extern UNK_TYPE1 D_801D1244;
// extern UNK_TYPE1 D_801D12C0;
// extern UNK_TYPE1 D_801D12D0;
// extern UNK_TYPE1 D_801D12D4;
// extern UNK_TYPE1 D_801D12D8;
// extern UNK_TYPE1 D_801D12DC;
// extern UNK_TYPE2 D_801D1330;
// extern UNK_TYPE1 D_801D1342;
// extern UNK_TYPE2 D_801D1344;
// extern UNK_TYPE1 D_801D1368;
// extern UNK_TYPE2 D_801D1374;
// extern UNK_TYPE1 D_801D1388;
// extern UNK_TYPE2 D_801D13D8;
// extern UNK_TYPE2 D_801D13DC;
// extern UNK_TYPE2 D_801D13E0;
// extern UNK_TYPE2 D_801D13E4;
// extern UNK_TYPE4 D_801D13E8;
// extern UNK_TYPE1 D_801D13EC;
// extern UNK_TYPE1 D_801D13F0;
// extern UNK_TYPE1 D_801D13F4;
// extern UNK_TYPE1 D_801D13F8;
// extern UNK_TYPE1 D_801D1420;
// extern UNK_TYPE2 D_801D142C;
// extern UNK_TYPE2 D_801D1434;
// extern UNK_TYPE2 D_801D1438;
// extern UNK_TYPE2 D_801D143C;
// extern UNK_TYPE2 D_801D1440;
// extern UNK_TYPE2 D_801D1444;
// extern UNK_TYPE2 D_801D1448;
// extern UNK_TYPE2 D_801D144C;
// extern UNK_TYPE2 D_801D1450;
// extern UNK_TYPE2 D_801D1454;
// extern UNK_TYPE2 D_801D1458;
// extern UNK_TYPE2 D_801D145C;
// extern UNK_TYPE2 D_801D1460;
// extern UNK_TYPE1 D_801D1464;
// extern UNK_TYPE1 D_801D1468;
// extern UNK_TYPE1 D_801D146C;
// extern UNK_TYPE2 D_801D14DC;
// extern UNK_TYPE2 D_801D14E0;
// extern UNK_TYPE2 D_801D14E4;
// extern UNK_TYPE2 D_801D14E8;
// extern UNK_TYPE4 D_801D14F0;
extern s32 gFramerateDivisor;
extern f32 gFramerateDivisorF;
extern f32 gFramerateDivisorHalf;
extern f32 gFramerateDivisorThird;
extern u32 retryCount;
extern u32 cfbIdx[3];
extern s32 gScreenWidth;
extern s32 gScreenHeight;
extern u32 startHeapSize;
extern PadMgr* padmgrContext;
// extern UNK_TYPE4 controllerInputsCaptured;
// extern UNK_TYPE4 D_801D1538;
extern UNK_PTR D_801D1540;
// extern f32 sFactorialTbl[13];
extern Vec3f gZeroVec3f;
extern Vec3s gZeroVec3s;

extern s16 gLowPassFilterData[];
extern s16 gHighPassFilterData[];
extern s16 gBandStopFilterData[];
extern s16 gBandPassFilterData[];
extern s16* gWaveSamples[9];
extern f32 gBendPitchOneOctaveFrequencies[];
extern f32 gBendPitchTwoSemitonesFrequencies[];
extern f32 gPitchFrequencies[];
extern u8 gDefaultShortNoteVelocityTable[];
extern u8 gDefaultShortNoteGateTimeTable[];
extern EnvelopePoint gDefaultEnvelope[];
extern NoteSampleState gZeroedSampleState;
extern NoteSampleState gDefaultSampleState;
extern u16 gHaasEffectDelaySize[];
extern u16 gHaasEffectDelaySize[];
extern s16 gInvalidAdpcmCodeBook[];
extern f32 gHeadsetPanVolume[];
extern f32 gStereoPanVolume[];
extern f32 gDefaultPanVolume[];
// extern UNK_TYPE1 D_801D5F24;
// extern UNK_TYPE4 D_801D5FB4;
// extern UNK_TYPE4 D_801D5FB8;
// extern UNK_TYPE4 D_801D5FBC;
// extern UNK_TYPE4 D_801D5FC0;
// extern UNK_TYPE1 D_801D5FD4;
extern UNK_PTR D_801D5FE0;
// extern UNK_TYPE1 D_801D5FE4;
extern s32 gAudioCtxInitalized;
// extern UNK_TYPE4 D_801D5FEC;
// extern UNK_TYPE4 D_801D6190;
// extern UNK_TYPE4 D_801D6194;
extern u8 D_801D6200[0x400];
extern u8 gIsLargeSfxBank[7];
extern u8 D_801D6608[7];
extern u8 gChannelsPerBank[4][7];
extern u8 gUsedChannelsPerBank[4][7];
// extern UNK_TYPE1 D_801D6648;
// extern UNK_TYPE1 D_801D664C;
// extern UNK_TYPE1 D_801D6650;
extern f32 gSfxVolume;
// extern UNK_TYPE1 D_801D6658;
// extern UNK_TYPE1 D_801D665C;
// extern UNK_TYPE1 D_801D6660;
// extern UNK_TYPE1 D_801D666C;
// extern UNK_TYPE1 D_801D6680;
// extern UNK_TYPE1 D_801D6684;
// extern UNK_TYPE4 D_801D6694;
// extern UNK_TYPE1 D_801D6698;
// extern UNK_TYPE1 D_801D669E;
// extern UNK_TYPE1 D_801D669F;
// extern UNK_TYPE1 D_801D66A0;
// extern UNK_TYPE2 D_801D66A4;
// extern UNK_TYPE1 D_801D66A8;
// extern UNK_TYPE1 D_801D66AC;
// extern UNK_TYPE1 D_801D66B0;
// extern UNK_TYPE1 D_801D66B4;
// extern UNK_TYPE1 D_801D66B8;
// extern UNK_TYPE1 D_801D66BC;
// extern UNK_TYPE1 D_801D66C0;
// extern UNK_TYPE4 D_801D66C4;
// extern UNK_TYPE1 D_801D66C8;
// extern UNK_TYPE2 D_801D66CC;
// extern UNK_TYPE1 D_801D66D0;
// extern UNK_TYPE1 D_801D66D4;
// extern UNK_TYPE4 D_801D66D8;
// extern UNK_TYPE4 D_801D66DC;
// extern UNK_TYPE1 D_801D66E0;
// extern UNK_TYPE1 D_801D66E4;
// extern UNK_TYPE1 D_801D66E8;
// extern UNK_TYPE1 D_801D66EC;
// extern UNK_TYPE1 D_801D66F0;
// extern UNK_TYPE4 D_801D66F4;
// extern UNK_TYPE4 D_801D66F8;
// extern UNK_TYPE1 D_801D66FC;
// extern UNK_TYPE1 D_801D6700;
// extern UNK_TYPE1 D_801D6780;
// extern UNK_TYPE1 D_801D6794;
// extern UNK_TYPE1 D_801D6FB4;
// extern UNK_TYPE1 D_801D6FB8;
// extern UNK_TYPE1 D_801D6FBC;
// extern UNK_TYPE1 D_801D6FC0;
// extern UNK_TYPE1 D_801D6FC4;
// extern UNK_TYPE1 D_801D6FC8;
// extern UNK_TYPE4 D_801D6FCC;
// extern UNK_TYPE1 D_801D6FD0;
// extern UNK_TYPE1 D_801D6FD4;
// extern UNK_TYPE1 D_801D6FD8;
// extern UNK_TYPE1 D_801D6FDC;
// extern UNK_TYPE1 D_801D6FE0;
// extern UNK_TYPE1 sPlaybackStaffStopPos;
// extern UNK_TYPE1 sPlaybackStaffStartPos;
// extern UNK_TYPE4 D_801D6FEC;
// extern UNK_TYPE4 D_801D6FF0;
// extern UNK_TYPE2 D_801D6FF4;
// extern UNK_TYPE2 D_801D6FF8;
// extern UNK_TYPE4 D_801D6FFC;
// extern UNK_TYPE1 D_801D7000;
// extern UNK_TYPE1 D_801D7004;
// extern UNK_TYPE1 D_801D7008;
// extern UNK_TYPE1 D_801D700C;
// extern UNK_TYPE4 D_801D7010;
// extern UNK_TYPE4 D_801D7014;
// extern UNK_TYPE4 D_801D7018;
// extern UNK_TYPE4 D_801D701C;
// extern UNK_TYPE1 D_801D701E;
// extern UNK_TYPE1 D_801D701F;
// extern UNK_TYPE1 D_801D7020;
// extern UNK_TYPE1 D_801D7028;
// extern UNK_TYPE1 D_801D702C;
// extern UNK_TYPE1 D_801D7030;
// extern UNK_TYPE1 D_801D7038;
// extern UNK_TYPE1 D_801D703C;
// extern UNK_TYPE1 D_801D7040;
// extern UNK_TYPE1 D_801D7044;
// extern UNK_TYPE4 D_801D7E04;
// extern UNK_TYPE1 D_801D7EA4;
// extern UNK_TYPE1 D_801D7F44;
// extern UNK_TYPE1 D_801D84E4;
extern UNK_PTR D_801D84F0;
// extern UNK_TYPE1 D_801D84F4;
// extern UNK_TYPE1 D_801D8508;
// extern UNK_TYPE1 D_801D850C;
// extern UNK_TYPE4 D_801D8510;
// extern UNK_TYPE1 D_801D8514;
// extern UNK_TYPE1 D_801D8518;
// extern UNK_TYPE1 D_801D851C;
// extern UNK_TYPE1 D_801D8520;
// extern UNK_TYPE1 D_801D8524;
// extern UNK_TYPE1 D_801D8528;
// extern UNK_TYPE1 D_801D852C;
// extern UNK_TYPE1 D_801D8530;
// extern UNK_TYPE4 D_801D8534;
// extern UNK_TYPE1 D_801D8538;
// extern UNK_TYPE1 D_801D853C;
// extern UNK_TYPE2 D_801D853E;
// extern UNK_TYPE1 D_801D8544;
extern UNK_PTR D_801D889C;
extern u8* gScarecrowSpawnSongPtr;
extern UNK_PTR D_801D88A4;
// extern UNK_TYPE1 D_801D88A8;
// extern UNK_TYPE1 D_801D88B8;
extern OcarinaSongButtons gOcarinaSongButtons[24];
// extern UNK_TYPE1 D_801D8B20;
extern UNK_PTR D_801D8B24;
// extern UNK_TYPE2 D_801D8B28;
// extern UNK_TYPE1 D_801D8B2C;
// extern UNK_TYPE1 D_801D8B30;
// extern UNK_TYPE1 D_801D8BB0;
// extern UNK_TYPE2 D_801D8BD0;
// extern UNK_TYPE4 D_801D8BD4;
// extern UNK_TYPE1 D_801D8BE0;
// extern UNK_TYPE1 D_801D8E3C;
// extern UNK_TYPE4 D_801D8E40;
// extern UNK_TYPE2 D_801D8E44;
// extern UNK_TYPE1 D_801D8E48;
// extern UNK_TYPE1 D_801D8E50;
// extern UNK_TYPE1 D_801D8F70;
extern SfxParams* gSfxParams[7];
extern SfxBankEntry* gSfxBanks[7];
extern u8 gSfxChannelLayout;
extern Vec3f gSfxDefaultPos;
extern f32 gSfxDefaultFreqAndVolScale;
extern s8 gSfxDefaultReverb;
extern u8 gAudioSpecId;
extern u8 gAudioHeapResetState;
extern ReverbSettings* gReverbSettingsTable[10];
extern AudioSpec gAudioSpecs[21];

// rodata
extern const TexturePtr gCircleTex[];
extern const u16 gAudioEnvironmentalSfx[];
extern const s16 gAudioTatumInit[];
extern const AudioHeapInitSizes gAudioHeapInitSizes;
extern const u8 gSoundFontTable[];
extern const u8 gSequenceFontTable[];
extern const u8 gSequenceTable[];
extern const u8 gSampleBankTable[];

// bss
// extern UNK_TYPE1 D_801ED890;
// extern UNK_TYPE1 D_801ED894;
extern CollisionPoly* D_801ED8B0;
extern s32 D_801ED8B4;
// extern UNK_TYPE1 D_801ED8B8;
// extern UNK_TYPE1 D_801ED8BC;
// extern UNK_TYPE1 D_801ED8C0;
// extern UNK_TYPE1 D_801ED8C4;
extern f32 D_801ED8C8;
extern f32 sBgmEnemyDistSq;
extern f32 D_801ED8D0;
// extern UNK_TYPE1 D_801ED8D4;
// extern UNK_TYPE1 D_801ED8D8;
// extern UNK_TYPE1 D_801ED8DC;
extern Mtx D_801ED8E0;
extern Actor* D_801ED920;
extern FaultClient sActorOverlayTableFaultClient;
extern FaultAddrConvClient sActorOverlayTableFaultAddrConvClient;
extern char D_801ED950[80];
extern char D_801ED9A0[80];
extern Vec3f D_801ED9F0[3];
extern Vec3f D_801EDA18[3];
extern MtxF sModelToWorldMtxF;
extern Vec3f D_801EDA80[3];
extern char D_801EDAA8[80];
extern char D_801EDAF8[80];
extern Vec3f D_801EDB48[3];
extern Vec3f D_801EDB70[3];
extern Plane D_801EDB98;
extern Sphere16 D_801EDBA8;
extern TriNorm D_801EDBB0;

extern Vec3f D_801EDE00;
extern Vec3f D_801EDE10;
extern Vec3f D_801EDE20;
extern Vec3f D_801EDE30;
extern TriNorm D_801EDE40;
extern TriNorm D_801EDE78;
extern LineSegment D_801EDEB0;
extern TriNorm D_801EDEC8;
extern TriNorm D_801EDF00;
extern Vec3f D_801EDF38;
extern Vec3f D_801EDF48;
extern TriNorm D_801EDF58;
extern TriNorm D_801EDF90;
extern LineSegment D_801EDFC8;
extern Vec3f D_801EDFE0;
extern Vec3f D_801EDFF0;
extern TriNorm D_801EE000;
extern TriNorm D_801EE038;
extern TriNorm D_801EE070[2];
extern Vec3f D_801EE0D8;
extern TriNorm D_801EE0E8[2];
extern TriNorm D_801EE150;
extern TriNorm D_801EE188;
extern Vec3f D_801EE1C0;
extern Vec3f D_801EE1D0;
extern Vec3f D_801EE1E0;
extern Vec3f D_801EE1F0;
// extern UNK_TYPE1 D_801EE1F4;
// extern UNK_TYPE1 D_801EE1F8;
extern EffectSparkInit D_801EE200;
extern TriNorm D_801EE6C8;
extern TriNorm D_801EE700;
extern EffectSparkInit D_801EE738;
extern EffectSparkInit D_801EEC00;
extern EffectSparkInit D_801EF0C8;
extern TriNorm D_801EF590;
extern TriNorm D_801EF5C8;
extern TriNorm D_801EF600;
extern TriNorm D_801EF638;
extern SaveContext gSaveContext;
// extern UNK_TYPE2 D_801F3F38;
// extern UNK_TYPE1 D_801F3F3A;
// extern UNK_TYPE1 D_801F3F3B;
// extern UNK_TYPE1 D_801F3F3C;
// extern UNK_TYPE1 D_801F3F42;
// extern UNK_TYPE1 D_801F3F4A;
// extern UNK_TYPE1 D_801F3F5A;

// extern UNK_TYPE1 D_801F3F80;
// extern UNK_TYPE1 D_801F3F83;
// extern UNK_TYPE1 D_801F48C8;

extern UNK_TYPE D_801F4DDC;
extern u8 gDisablePlayerCsModeStartPos;
extern s16 gDungeonBossWarpSceneId;

extern ActorCutscene* sSceneCutsceneList;
extern s16 sSceneCutsceneCount;
extern u8 sWaitingCutsceneList[16];
// extern UNK_TYPE1 D_801F4E08;
extern u8 sNextCutsceneList[16];
// extern UNK_TYPE1 D_801F4E20;
extern u8 D_801F4E30;
// extern UNK_TYPE1 D_801F4E31;
extern s8 D_801F4E32;
extern Vec3f D_801F4E38;
extern f32 D_801F4E44;
extern f32 D_801F4E48;
extern s16 D_801F4E4C;
extern s8 D_801F4E4E;
extern Vec3f D_801F4E50;
extern f32 D_801F4E5C;
extern f32 D_801F4E60;
extern s16 D_801F4E64;
extern u8 D_801F4E68;
extern f32 D_801F4E70;
// extern UNK_TYPE1 D_801F4E74;
extern u16 D_801F4E78;
extern s16 D_801F4E7A;
// extern UNK_TYPE1 D_801F4E80;
// extern UNK_TYPE1 D_801F4EE0;
// extern UNK_TYPE1 D_801F4EE8;
// extern UNK_TYPE1 D_801F4EF8;
// extern UNK_TYPE1 D_801F4F00;
// extern UNK_TYPE1 D_801F4F10;
// extern UNK_TYPE1 D_801F4F14;
// extern UNK_TYPE1 D_801F4F18;
// extern UNK_TYPE1 D_801F4F1C;
// extern UNK_TYPE1 D_801F4F20;
// extern UNK_TYPE1 D_801F4F24;
// extern UNK_TYPE1 D_801F4F28;
// extern UNK_TYPE1 D_801F4F2C;
// extern UNK_TYPE1 D_801F4F2E;
// extern UNK_TYPE1 D_801F4F30;
// extern UNK_TYPE1 D_801F4F31;
// extern UNK_TYPE1 D_801F4F32;
// extern UNK_TYPE1 D_801F4F33;
// extern UNK_TYPE1 D_801F4F34;
// extern UNK_TYPE1 D_801F4F38;
// extern UNK_TYPE1 sBeatingHeartsDDPrim;
// extern UNK_TYPE1 sBeatingHeartsDDEnv;
// extern UNK_TYPE1 sHeartsDDPrim;
// extern UNK_TYPE1 D_801F4F56;
// extern UNK_TYPE1 D_801F4F58;
// extern UNK_TYPE1 D_801F4F5A;
// extern UNK_TYPE1 D_801F4F60;
// extern UNK_TYPE1 D_801F4F66;
// extern UNK_TYPE1 D_801F4F68;
// extern UNK_TYPE1 D_801F4F6A;
// extern LightsBuffer sLightsBuffer;
// extern UNK_TYPE1 D_801F5130;
// extern UNK_TYPE1 D_801F5270;
// extern UNK_TYPE1 D_801F528E;
// extern UNK_TYPE1 D_801F53B0;
// extern UNK_TYPE1 D_801F56B0;
// extern UNK_TYPE1 D_801F5730;
// extern UNK_TYPE1 D_801F57B4;
// extern UNK_TYPE1 D_801F5834;
// extern NmiBuff* gNMIBuffer;

// extern UNK_TYPE1 sSkyboxDrawMatrix;
// extern UNK_TYPE1 D_801F6AF0;
// extern UNK_TYPE1 D_801F6AF2;
// extern UNK_TYPE4 D_801F6B00;
// extern UNK_TYPE4 D_801F6B04;
// extern UNK_TYPE4 D_801F6B08;
// extern UNK_TYPE1 D_801F6B0C;
// extern UNK_TYPE1 D_801F6B0E;
// extern UNK_TYPE1 D_801F6B10;
// extern UNK_TYPE1 D_801F6B12;
// extern UNK_TYPE1 D_801F6B14;
// extern UNK_TYPE1 D_801F6B16;
// extern UNK_TYPE1 D_801F6B18;
// extern UNK_TYPE1 D_801F6B1A;
// extern UNK_TYPE1 D_801F6B1C;
// extern UNK_TYPE1 D_801F6B1E;
// extern UNK_TYPE1 D_801F6B20;
// extern UNK_TYPE1 D_801F6B22;
// extern UNK_TYPE4 sCurCsCamera;
// extern UNK_TYPE1 D_801F6B58;
extern void (*sKaleidoScopeUpdateFunc)(PlayState* play);
extern void (*sKaleidoScopeDrawFunc)(PlayState* play);
extern FaultAddrConvClient sKaleidoMgrFaultAddrConvClient;
extern s16 sTransitionFillTimer;
extern Input D_801F6C18;
extern TransitionTile sTransitionTile;
extern s32 gTransitionTileState;
extern VisMono sVisMono;
extern Color_RGBA8_u32 gVisMonoColor;
extern Struct_80140E80 D_801F6D38;
extern Struct_80140E80* D_801F6D4C;
extern BombersNotebook sBombersNotebook;
extern u8 sBombersNotebookOpen;
extern u8 sMotionBlurStatus;

extern UNK_TYPE1 D_801F7FF0;
extern struct_801F8010 D_801F8010;
extern VisZbuf sVisZbuf;
extern VisMono sMonoColors;
extern UNK_TYPE1 D_801F8048;
extern FaultAddrConvClient sGraphFaultAddrConvClient;
extern FaultClient sGraphFaultClient;
extern GfxMasterList* gGfxMasterDL;
extern CfbInfo sGraphCfbInfos[3];
extern OSTime sGraphTaskStartTime;

extern u32 gSegments[NUM_SEGMENTS];
extern SchedContext gSchedContext;

extern OSThread gGraphThread;
extern PadMgr gPadMgr;

extern FaultClient sSchedFaultClient;
extern OSTime sRSPGFXStartTime;
extern OSTime sRSPAudioStartTime;
extern OSTime sRSPOtherStartTime;
extern OSTime sRDPStartTime;
extern u64* gAudioSPDataPtr;
extern u32 gAudioSPDataSize;
extern volatile OSTime D_801FBAE0;
extern volatile OSTime D_801FBAE8;
extern volatile OSTime D_801FBAF0;
extern volatile OSTime lastRenderFrameDuration;
extern volatile OSTime gRSPAudioTotalTime;
extern volatile OSTime sRSPGFXTotalTime;
extern volatile OSTime sRSPOtherTotalTime;
// extern UNK_TYPE1 D_801FBB18;
extern volatile OSTime gRDPTotalTime;
// extern UNK_TYPE1 D_801FBB28;
extern OSViMode D_801FBB30;
extern u32* gFramebuffers[2];
extern OSViMode* D_801FBB88;
extern u16* gZBufferPtr;
extern void* D_801FBB90;
extern u64* gGfxSPTaskOutputBufferPtr;
extern size_t gGfxSPTaskOutputBufferSize;
// extern UNK_TYPE1 D_801FBB9C;
// extern UNK_TYPE1 D_801FBBA0;
extern u16 (*gZBuffer)[SCREEN_WIDTH * SCREEN_HEIGHT];
extern u16 (*gWorkBuffer)[SCREEN_WIDTH * SCREEN_HEIGHT];
extern u64 (*gGfxSPTaskOutputBuffer)[0x3000];
extern void* gGfxSPTaskOutputBufferEnd;
// extern UNK_TYPE1 D_801FBBB4;
// extern UNK_TYPE1 D_801FBBB8;
// extern UNK_TYPE1 D_801FBBBC;
// extern UNK_TYPE1 D_801FBBC0;
extern u64 (*gGfxSPTaskOutputBuffer2)[0x3000];
extern void* gGfxSPTaskOutputBufferEnd2;
extern UNK_TYPE2 D_801FBBCC;
extern UNK_TYPE2 D_801FBBCE;
// extern UNK_TYPE1 D_801FBBD0;
// extern UNK_TYPE1 D_801FBBD2;
extern u8 D_801FBBD4;
extern Vec3f D_801FBBF0;
extern LineSegment Math3D_ColSphereTri_line;
extern Vec3f Math3D_ColSphereTri_point;
// extern UNK_TYPE1 D_801FBC28;
// extern UNK_TYPE1 D_801FBC2C;
// extern UNK_TYPE1 D_801FBC30;
// extern UNK_TYPE1 D_801FBC38;
// extern UNK_TYPE1 D_801FBC3A;
// extern UNK_TYPE1 D_801FBC3C;
// extern UNK_TYPE1 D_801FBC3E;
// extern UNK_TYPE1 D_801FBC40;
// extern UNK_TYPE1 D_801FBC42;
// extern UNK_TYPE1 D_801FBC44;
// extern UNK_TYPE1 D_801FBC46;
// extern UNK_TYPE1 D_801FBC48;
// extern UNK_TYPE1 D_801FBC58;
extern Vec3f Math3D_NormalVector_temp1;
extern Vec3f Math3D_NormalVector_temp2;
extern f32 D_801FBC8C;
extern f32 D_801FBC90;
extern f32 D_801FBC98;
extern f32 D_801FBCA4;
extern f32 D_801FBCAC;
extern f32 D_801FBCB0;
extern f32 D_801FBCB4;
extern f32 D_801FBCB8;
extern f32 D_801FBCBC;
extern f32 D_801FBCC0;
extern f32 D_801FBCC4;
extern f32 D_801FBCC8;
extern f32 D_801FBCCC;
extern f32 D_801FBCD0;
extern f32 D_801FBCD4;
extern f32 D_801FBCD8;
extern f32 D_801FBCDC;
// extern UNK_TYPE1 D_801FBCE0;
// extern UNK_TYPE1 D_801FBCE4;
// extern UNK_TYPE1 D_801FBCE8;
// extern UNK_TYPE1 D_801FBCF0;
// extern UNK_TYPE1 D_801FBCF4;
// extern UNK_TYPE1 D_801FBCF8;
// extern UNK_TYPE1 D_801FBD00;
// extern UNK_TYPE1 D_801FBD04;
// extern UNK_TYPE1 D_801FBD08;
// extern UNK_TYPE1 D_801FBD10;
// extern UNK_TYPE1 D_801FBD20;
// extern UNK_TYPE1 D_801FBD24;
// extern UNK_TYPE1 D_801FBD28;
// extern UNK_TYPE1 D_801FBD30;
// extern UNK_TYPE1 D_801FBD34;
// extern UNK_TYPE1 D_801FBD38;
// extern UNK_TYPE1 D_801FBD40;
// extern UNK_TYPE1 D_801FBD44;
// extern UNK_TYPE1 D_801FBD48;
// extern UNK_TYPE1 D_801FBD50;
// extern UNK_TYPE1 D_801FBD54;
// extern UNK_TYPE1 D_801FBD58;
extern Vec3f Math3D_UnitNormalVector_temp;
// extern UNK_TYPE1 D_801FBD70;
// extern UNK_TYPE1 D_801FBD74;
// extern UNK_TYPE1 D_801FBD78;
extern Vec3f D_801FBD80[2];
extern Vec3f D_801FBD98;
extern Vec3f D_801FBDA4;
// extern UNK_TYPE1 D_801FBDB0;
// extern UNK_TYPE1 D_801FBDB4;
// extern UNK_TYPE1 D_801FBDB8;
// extern UNK_TYPE1 D_801FBDC0;
// extern UNK_TYPE1 D_801FBDD8;
// extern UNK_TYPE1 D_801FBDDC;
// extern UNK_TYPE1 D_801FBDE0;
extern Vec3f D_801FBDE8;
extern MtxF* sMatrixStack;
extern MtxF* sCurrentMatrix;

extern s32 D_801FD120;
// extern UNK_TYPE1 D_801FD140;
// extern UNK_TYPE1 D_801FD158;
// extern UNK_TYPE1 D_801FD198;
// extern UNK_TYPE1 D_801FD1E0;
// extern UNK_TYPE1 D_801FD1F0;
// extern UNK_TYPE1 D_801FD250;
// extern UNK_TYPE1 D_801FD254;
// extern UNK_TYPE1 D_801FD258;
// extern UNK_TYPE1 D_801FD25C;
// extern UNK_TYPE1 D_801FD260;
// extern UNK_TYPE1 D_801FD264;
// extern UNK_TYPE1 D_801FD268;
// extern UNK_TYPE1 D_801FD278;
// extern UNK_TYPE1 D_801FD288;
// extern UNK_TYPE1 D_801FD28C;
// extern UNK_TYPE1 D_801FD28D;
// extern UNK_TYPE1 D_801FD28E;
// extern UNK_TYPE1 D_801FD28F;
// extern UNK_TYPE1 D_801FD290;
// extern UNK_TYPE1 D_801FD291;
// extern UNK_TYPE1 D_801FD294;
// extern UNK_TYPE1 D_801FD298;
// extern UNK_TYPE1 D_801FD29C;
// extern UNK_TYPE1 D_801FD2A0;
// extern UNK_TYPE1 D_801FD2A8;
// extern UNK_TYPE1 D_801FD3A8;
// extern UNK_TYPE1 D_801FD3A9;
// extern UNK_TYPE1 D_801FD3AA;
// extern UNK_TYPE1 D_801FD3AB;
// extern UNK_TYPE1 D_801FD3AC;
// extern UNK_TYPE1 D_801FD3AE;
// extern UNK_TYPE1 D_801FD3AF;
// extern UNK_TYPE1 D_801FD3B0;
// extern UNK_TYPE1 D_801FD3B4;
// extern UNK_TYPE1 D_801FD3B7;
// extern UNK_TYPE1 D_801FD3B8;
// extern UNK_TYPE1 D_801FD3D8;
// extern UNK_TYPE1 D_801FD3D9;
// extern UNK_TYPE1 D_801FD3DA;
// extern UNK_TYPE1 D_801FD3E0;
// extern UNK_TYPE1 D_801FD3EC;
// extern UNK_TYPE1 D_801FD3F0;
// extern UNK_TYPE1 D_801FD3FC;
// extern UNK_TYPE1 D_801FD400;
// extern UNK_TYPE1 D_801FD404;
// extern UNK_TYPE1 D_801FD408;
// extern UNK_TYPE1 D_801FD40C;
// extern UNK_TYPE1 D_801FD410;
// extern UNK_TYPE1 D_801FD420;
// extern UNK_TYPE1 D_801FD42C;
// extern UNK_TYPE1 D_801FD430;
// extern UNK_TYPE1 D_801FD431;
// extern UNK_TYPE1 D_801FD432;
// extern UNK_TYPE1 D_801FD433;
// extern UNK_TYPE1 D_801FD434;
// extern UNK_TYPE1 D_801FD435;
// extern UNK_TYPE1 D_801FD436;
// extern UNK_TYPE1 sPrevAmbienceSeqId;
// extern UNK_TYPE1 D_801FD43A;
// extern UNK_TYPE1 D_801FD43B;
// extern UNK_TYPE1 D_801FD43E;
// extern UNK_TYPE1 D_801FD442;
// extern UNK_TYPE1 D_801FD448;
// extern UNK_TYPE1 D_801FD44C;
// extern UNK_TYPE1 D_801FD44D;
// extern UNK_TYPE1 D_801FD450;
// extern UNK_TYPE1 D_801FD454;
// extern UNK_TYPE1 D_801FD458;
// extern UNK_TYPE1 D_801FD45C;
// extern UNK_TYPE1 D_801FD460;
// extern UNK_TYPE1 D_801FD461;
// extern UNK_TYPE1 D_801FD462;
// extern UNK_TYPE1 D_801FD463;
// extern UNK_TYPE1 D_801FD464;
// extern UNK_TYPE1 D_801FD468;
// extern UNK_TYPE1 D_801FD46C;
// extern UNK_TYPE1 D_801FD470;
// extern UNK_TYPE1 D_801FD4A0;
// extern UNK_TYPE1 D_801FD4D0;
// extern UNK_TYPE1 D_801FD500;
// extern UNK_TYPE1 D_801FD518;
// extern UNK_TYPE1 D_801FD530;
// extern UNK_TYPE1 D_801FD533;
// extern UNK_TYPE1 D_801FD590;
// extern UNK_TYPE1 D_801FD598;
// extern UNK_TYPE1 D_801FD5A0;
// extern UNK_TYPE1 D_801FD5A4;
// extern UNK_TYPE1 D_801FD5B8;
// extern UNK_TYPE1 D_801FD5C4;
// extern UNK_TYPE1 D_801FD5C8;
// extern UNK_TYPE1 D_801FD5E8;
// extern UNK_TYPE1 D_801FD608;
// extern UNK_TYPE1 D_801FD610;
extern ActiveSfx gActiveSfx[7][3];
extern SeqRequest sSeqRequests[][5];
extern u8 sNumSeqRequests[5];
extern u32 sAudioSeqCmds[0xB0];
extern ActiveSequence gActiveSeqs[];
extern u8 sResetAudioHeapTimer;
extern u16 sResetAudioHeapFadeReverbVolume;
extern u16 sResetAudioHeapFadeReverbVolumeStep;
extern AudioContext gAudioCtx; // at 0x80200C70
extern AudioCustomUpdateFunction gAudioCustomUpdateFunction;
extern AudioCustomSeqFunction gAudioCustomSeqFunction;
extern AudioCustomReverbFunction gAudioCustomReverbFunction;
extern AudioCustomSynthFunction gAudioCustomSynthFunction;

// other segments
extern GfxMasterList D_0E000000;
extern Mtx D_01000000;
extern u16 D_0F000000[];


#endif
